import React, { useState } from 'react';
import { Form, Select } from 'antd';

const { Option } = Select;

const YourComponent = () => {
    const [previousStage, setPreviousStage] = useState('');

    const handleStageChange = (value) => {
        // Disable the previously selected option
        setPreviousStage(value);
    };

    return (
        <Form.Item
            name="stage"
            label={<span className='text-info text-capitalize'>Stage</span>}
            rules={[
                { required: true, message: 'stage is required' },
            ]}
        >
            <Select onChange={handleStageChange}>
                <Option value="" disabled>Select</Option>
                <Option value="rfp" disabled={previousStage === "rfp"}>RFP</Option>
                <Option value="lost" disabled={previousStage === "lost"}>Lost</Option>
                <Option value="won" disabled={previousStage === "won"}>Won</Option>
                <Option value="inprocess" disabled={previousStage === "inprocess"}>In Process</Option>
                <Option value="completed" disabled={previousStage === "completed"}>Completed</Option>
                <Option value="scrapped" disabled={previousStage === "scrapped"}>Scrapped</Option>
            </Select>
        </Form.Item>
    );
};

export default YourComponent;


const [currentStage, setCurrentStage] = useState('');

const handleStageChange = (value) => {
    setCurrentStage(value);
};

return (
    <Form.Item
        name="stage"
        label={<span className='text-info text-capitalize'>Stage</span>}
        rules={[
            { required: true, message: 'Stage is required' },
        ]}
    >
        <Select onChange={handleStageChange}>
            {[1, 2, 3, 4, 5, 6].map(stage => (
                <Option key={stage} value={stage.toString()} disabled={parseInt(currentStage) >= stage}>
                    {stage}
                </Option>
            ))}
        </Select>
    </Form.Item>
);